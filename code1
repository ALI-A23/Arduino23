#define AL1 13
#define AL2 12
#define AL3 11
#define AL4 10
#define AL5 9
#define AL6 8
#define AL7 7
#define AL8 6

#define S1 5
#define S2 4
#define S3 3
#define S4 2
#define S5 A4
#define S6 A3
#define S7 A2
#define S8  A1

const int Al[] = {AL1, AL2, AL3, AL4, AL5,AL6,AL7,  AL8 };
const int s[] = {S1,S2, S3, S4, S5, S6, S7, S8};



int A[8][8] = {{1,1,1,1,1,1,1,1},
		       {1,1,1,1,1,1,1,1},
		       {1,1,1,1,1,1,1,1},
		       {1,1,0,0,0,0,0,1},
		       {1,1,0,1,1,1,0,1},
		       {1,1,1,0,1,0,1,1},
		       {1,1,1,1,0,1,1,1},
		       {1,1,1,1,1,1,1,1}};

void setup() {
  Serial.begin(9600);
  for (int i = 2; i <= 13; i++) {
    pinMode(i, OUTPUT);
    digitalWrite(i, LOW);
  }
  pinMode(A1, OUTPUT);
  digitalWrite(A1, LOW);
  pinMode(A2, OUTPUT);
  digitalWrite(A2, LOW);
  pinMode(A3, OUTPUT);
  digitalWrite(A3, LOW);
  pinMode(A4, OUTPUT);
  digitalWrite(A4, LOW);
}

void loop() {

  delay(1);
  yaz(A);

}

void  yaz(int matrix[8][8]){
  for (int c=0; c<8; c++){

    digitalWrite(s[c], HIGH);
    for (int r = 0; r < 8; r++){
      digitalWrite(Al[r], 255*matrix[r][c]);
     delay(1);
    }
    for (int r = 0; r < 8; r++){
      digitalWrite(Al[r], HIGH);
     delay(1);
    }
  
    digitalWrite(s[c], LOW);
  }
}
